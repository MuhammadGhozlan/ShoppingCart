@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore;
@using System.Linq;


@{
    ViewData["Title"] = "Vendor";
    
}

<main class="mt-5">
    <h2 class="mb-3">My Store</h2>
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="orders-tab" data-bs-toggle="tab" data-bs-target="#orders" type="button" role="tab" aria-controls="home" aria-selected="true">Orders</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="products-tab" data-bs-toggle="tab" data-bs-target="#products" type="button" role="tab" aria-controls="profile" aria-selected="false">Products</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="report-tab" data-bs-toggle="tab" data-bs-target="#report" type="button" role="tab" aria-controls="contact" aria-selected="false" aria-disabled="true">Report</button>
        </li>
    </ul>
    <div class="tab-content" id="myTabContent">
    <div class="tab-pane fade show active" id="orders" role="tabpanel" aria-labelledby="orders-tab">
             <div class="container">
            <div class="row">
                <table class="table">
                    <thead>
                        <tr>
                        <th scope="col">#</th>
                        <th scope="col">Product name</th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Price</th>
                        <th scope="col">Total</th>
                        <th scope="col">Order Date</th>
                        </tr>
                    </thead>
                     <tbody>
                        @if(ViewBag.OrderItems != null){
                            @for (int i = 0; i < ViewBag.OrderItems.Count; i++)
                            {
                                <tr>
                                    <th scope="row">@(i + 1)</th>
                                    <td>@ViewBag.OrderItems[i]?.ProductName</td>
                                    <td>@ViewBag.OrderItems[i]?.Quantity</td>
                                    <td>@ViewBag.OrderItems[i]?.Price</td>
                                    <td>@ViewBag.OrderItems[i]?.Total</td>
                                    <td>@ViewBag.OrderItems[i]?.OrderDate</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="tab-pane fade" id="products" role="tabpanel" aria-labelledby="products-tab">
        <div class="container">
            <div class="row">
                <table class="table">
                    <thead>
                        <tr>
                        <th scope="col">#</th>
                        <th scope="col">Image</th>
                        <th scope="col">Name</th>
                        <th scope="col">Price</th>
                        <th scope="col">Category</th>
                        <th scope="col">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if(ViewBag.products != null){
                            @for (int i = 0; i < ViewBag.products.Count; i++)
                            {
                                <tr>
                                    <th scope="row">@(i + 1)</th>
                                    <td><img src="/media/products/@ViewBag.products[i].Image" width="60"> </td>
                                    <td>@ViewBag.products[i]?.Name</td>
                                    <td>@ViewBag.products[i]?.Price</td>
                                    <td>@ViewBag.products[i]?.Category?.Name</td>
                                    <td>
                                    <a class="btn btn-success edit-button" asp-controller="ManagingProducts" asp-action="Edit" asp-route-id="@ViewBag.products[i].Id"><i class="bi bi-pencil-square"></i></a>
                                    <a class="btn btn-danger delete-button" asp-controller="ManagingProducts" asp-action="Delete" asp-route-id="@ViewBag.products[i].Id"><i class="bi bi-trash"></i></a>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                    <a class="btn btn-primary float-right" asp-controller="ManagingProducts" asp-action="Create"><i class="bi bi-plus-square">Create New</i></a>
                    </table>
            </div>
        </div>
    </div>
    <div class="tab-pane fade" id="report" role="tabpanel" aria-labelledby="report-tab">
        <div class="container my-3">
            <h4>Report</h4>
            <div class="row mt-3">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h3>Total sales</h3>
                            <h2>$@ViewBag.TotalSales</h2>
                        </div>
                    </div>
                </div>
                     <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h3>Total Order Items</h3>
                            <h2>@ViewBag.OrderItems.Count</h2>
                        </div>
                    </div>
                </div>
                     <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h3>Total Products</h3>
                            <h2>@ViewBag.products.Count</h2>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row my-3">
                 <div class="card">
                        <div class="card-body">
                            <h4>Total sales by Category</h4>
                               <!-- HTML -->
                            <div id="chartdiv"></div>
                        </div>
                </div>
            </div>
            </div>
        </div>
    </div>
    </div>
</main>


<!-- Styles -->
<style>
#chartdiv {
  width: 100%;
  height: 500px;
}
</style>

<!-- Resources -->
<script src="https://cdn.amcharts.com/lib/5/index.js"></script>
<script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
<script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>

<!-- Chart code -->
<script>
am5.ready(function() {

// Create root element
// https://www.amcharts.com/docs/v5/getting-started/#Root_element
var root = am5.Root.new("chartdiv");


// Set themes
// https://www.amcharts.com/docs/v5/concepts/themes/
root.setThemes([
  am5themes_Animated.new(root)
]);


// Create chart
// https://www.amcharts.com/docs/v5/charts/xy-chart/
var chart = root.container.children.push(am5xy.XYChart.new(root, {
  panX: true,
  panY: true,
  wheelX: "panX",
  wheelY: "zoomX",
  pinchZoomX: true
}));

// Add cursor
// https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/
var cursor = chart.set("cursor", am5xy.XYCursor.new(root, {}));
cursor.lineY.set("visible", false);


// Create axes
// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/
var xRenderer = am5xy.AxisRendererX.new(root, { minGridDistance: 30 });
xRenderer.labels.template.setAll({
  rotation: -90,
  centerY: am5.p50,
  centerX: am5.p100,
  paddingRight: 15
});

xRenderer.grid.template.setAll({
  location: 1
})

var xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {
  maxDeviation: 0.3,
  categoryField: "Category",
  renderer: xRenderer,
  tooltip: am5.Tooltip.new(root, {})
}));

var yAxis = chart.yAxes.push(am5xy.ValueAxis.new(root, {
  maxDeviation: 0.3,
  renderer: am5xy.AxisRendererY.new(root, {
    strokeOpacity: 0.1
  })
}));


// Create series
// https://www.amcharts.com/docs/v5/charts/xy-chart/series/
var series = chart.series.push(am5xy.ColumnSeries.new(root, {
  name: "Sale basing on categories ",
  xAxis: xAxis,
  yAxis: yAxis,
  valueYField: "value",
  sequencedInterpolation: true,
  categoryXField: "Categories",
  tooltip: am5.Tooltip.new(root, {
    labelText: "{valueY}"
  })
}));

series.columns.template.setAll({ cornerRadiusTL: 5, cornerRadiusTR: 5, strokeOpacity: 0 });
series.columns.template.adapters.add("fill", function(fill, target) {
  return chart.get("colors").getIndex(series.columns.indexOf(target));
});

series.columns.template.adapters.add("stroke", function(stroke, target) {
  return chart.get("colors").getIndex(series.columns.indexOf(target));
});

@{
    var data = ViewBag.OderItemGroupByCategory;
    var json = Newtonsoft.Json.JsonConvert.SerializeObject(data);
}
// Set data
var data = @Html.Raw(json);

xAxis.data.setAll(data);
series.data.setAll(data);


// Make stuff animate on load
// https://www.amcharts.com/docs/v5/concepts/animations/
series.appear(1000);
chart.appear(1000, 100);

}); // end am5.ready()
</script>
